/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'amrish' at '4/21/16 12:27 PM' with Gradle 2.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.12/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8

project.ext {
	configPath = "$rootProject.projectDir"
    dropwizardVersion = '0.8.5'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenLocal()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.18',
    	'io.dropwizard:dropwizard-core:0.8.2',
    	'io.dropwizard:dropwizard-testing:0.8.2',
    	'io.dropwizard:dropwizard-auth:0.8.2'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

mainClassName = "com.learn.dwstart.DWGettingStartedApplication"

run {
    args 'server', configPath + '/config.yml'
}